name: Daily Blog Post Generation

on:
  schedule:
    # Run daily at 6 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create .env file
        run: |
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env.prod
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env.prod
            echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env.prod
            echo "WEB_BUCKET=${{ secrets.WEB_BUCKET }}" >> .env.prod
            echo "UMAMI_ID=${{ secrets.UMAMI_ID }}" >> .env.prod
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.prod
            echo "NEXT_PUBLIC_SITE_URL=${{ secrets.NEXT_PUBLIC_SITE_URL }}" >> .env.prod
            echo "NEXT_PUBLIC_APP_ENV=${{ secrets.NEXT_PUBLIC_APP_ENV }}" >> .env.prod
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate new blog post
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "üöÄ Starting blog post generation..."
          echo "üìÅ Current directory: $(pwd)"
          echo "üìÑ Files in posts directory:"
          ls -la posts/ || echo "No posts directory found"
          echo "üîë OpenAI API key status: ${OPENAI_API_KEY:+SET}"
          echo "üîß Testing script directly..."
          echo "üìö Checking existing blog posts:"
          find posts/ -name "*.md" -exec basename {} \; | head -10
          echo "üîß Running blog generation script..."
          node scripts/generate-blog-post.js
          echo "üìÑ Files in posts directory after generation:"
          ls -la posts/ || echo "No posts directory found"
      
      - name: Check for new blog posts
        id: changes
        run: |
          echo "üîç Checking for new blog posts in posts/ folder..."
          echo "üìÑ Git status:"
          git status
          
          # Check specifically for new .md files in posts/ folder
          NEW_POSTS=$(git ls-files --others --exclude-standard posts/*.md 2>/dev/null || echo "")
          
          if [ -n "$NEW_POSTS" ]; then
            echo "‚úÖ New blog posts detected:"
            echo "$NEW_POSTS"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå No new blog posts found in posts/ folder"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add only new .md files in posts/ folder
          echo "üìù Adding new blog posts to git..."
          git add posts/*.md
          
          # Get the list of new files for the commit message
          NEW_FILES=$(git diff --cached --name-only)
          echo "üìÑ Files to be committed: $NEW_FILES"
          
          # Create commit message
          COMMIT_MSG="ü§ñ Auto-generated blog post for $(date +'%Y-%m-%d')"
          git commit -m "$COMMIT_MSG"
          
          echo "üöÄ Pushing changes to repository..."
          git push
      
      - name: Build and deploy to S3
        if: steps.changes.outputs.has_changes == 'true'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          WEB_BUCKET: ${{ secrets.WEB_BUCKET }}
        run: |
          npm run build
          ./scripts/copy-to-S3.sh
      
      - name: Notify on success
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          echo "‚úÖ Daily blog post generated and deployed successfully!"
          echo "üìù New blog post created and published to S3"
      
      - name: Notify on no changes
        if: steps.changes.outputs.has_changes == 'false'
        run: |
          echo "‚ÑπÔ∏è No new blog post generated (likely due to topic constraints or API issues)"
